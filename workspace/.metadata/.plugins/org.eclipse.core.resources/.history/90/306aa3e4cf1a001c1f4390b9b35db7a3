package src.main.java.ddit.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.google.gson.Gson;

import ddit.service.BoardServiceImpl;
import ddit.vo.BoardVO;


@WebServlet("/board/board.do")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");
		HttpSession session = request.getSession();

		String choice = request.getParameter("choice");	//jsp의 값을 가져오려고
		String board_no = request.getParameter("board_no");
		String board_nm = request.getParameter("board_nm");
		String board_title = request.getParameter("board_title");
		String board_writer = request.getParameter("board_writer");
		String board_content = request.getParameter("board_content");
		
		 
		System.out.println("choice" + choice);
		System.out.println("board_no ::"+board_no);
		
		Gson gson = new Gson();
		PrintWriter out = response.getWriter();
		String jsonData = null;
		
		BoardServiceImpl service = BoardServiceImpl.getInstance();
		List<BoardVO> list = null;
		BoardVO bVo = null;
		int count = 0;
		
		
		
		//////
		switch (choice) {
		case "자유":
			list = service.getBoardList(choice);
			jsonData = gson.toJson(list);
			out.print(jsonData);
			System.out.println(jsonData);
			response.flushBuffer();
			break;
		case "공지":
			list = service.getBoardList(choice);
			jsonData = gson.toJson(list);
			out.print(jsonData);
			System.out.println(jsonData);
			response.flushBuffer();
			break;
		
		case "세부":
			bVo = service.findBoard(Integer.parseInt(board_no));
			jsonData = gson.toJson(bVo);
			out.print(jsonData);
			System.out.println(jsonData);
			response.flushBuffer();
			break;
			
		case "추가" :
			bVo = new BoardVO();
			bVo.setMem_no((int) session.getAttribute("memNo"));
			bVo.setBoard_nm(board_nm);
			bVo.setBoard_title(board_title);
			bVo.setBoard_writer((String) session.getAttribute("name"));
			bVo.setBoard_content(board_content);
			
			count = service.insertBoard(bVo);
			jsonData = gson.toJson(count);
			out.print(jsonData);
			System.out.println(jsonData);
			response.flushBuffer();
			break;
		
		case "삭제":
			count = service.deleteBoard(Integer.parseInt(board_no));
			jsonData = gson.toJson(count);
			out.print(jsonData);
			System.out.println(jsonData);
			response.flushBuffer();
			break;

		default:
			break;
		}
		
		
		
		
		
		//request.getRequestDispatcher("/WEB-INF/view/mainPageINH.jsp").forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	
	
	}

}
